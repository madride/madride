#!/usr/bin/env ruby

#
# Require libraries
#

require 'optparse'
require 'madride'
require 'rack'

#
# Options container. Filled in with default values.
#

options = { :host => '0.0.0.0', :port => 3000, :data => {} }

#
# Parse options
#

OptionParser.new("", 24, '  ') do |opts|
  opts.banner = "Usage: madride [options] PATH [PATH ...]"

  opts.separator ""
  opts.separator "Options:"

  opts.on("-a", "--addr HOST", "listen on HOST (default: 0.0.0.0)") do |addr|
    options[:host] = addr
  end

  opts.on("-p", "--port PORT", "use PORT (default: 3000)") do |port|
    options[:port] = port
  end

  opts.on("-w", "--with PLUGIN", "include PLUGIN") do |plugin|
    begin
      require "madride-with-#{plugin}"
    rescue LoadError
      puts "Plugin #{plugin} not found"
    end
  end

  opts.on("-d", "--data FILE", "read data from yaml FILE") do |file|
    data = YAML.load_file file
    options[:data].merge! data if data.is_a? Hash
  end

  #
  # Parse options
  #

  begin
    opts.parse!
  rescue OptionParser::ParseError => e
    opts.warn e.message
    exit 1
  end
end

#
# Create new madride environment
#

environment = Madride::Environment.new Dir.pwd

#
# Fill in paths
#

if ARGV.empty?
  environment.append_path '.'
else
  ARGV.each{ |path| environment.append_path path }
end

#
# Propose locals data
#

environment.locals.merge! options[:data]

#
# Start server
#

Rack::Server.start(
  :Host   => options[:host],
  :Port   => options[:port],
  :server => 'webrick',
  :app    => environment
)
